@model IEnumerable<DoanhNghiepPortal.Models.UserModel>
@{
    ViewData["Title"] = "Qu·∫£n L√Ω Ng∆∞·ªùi D√πng";
    Layout = "_AdminLayout";
}

@section Styles {
    <style>
        .admin-container {
            padding: 20px;
        }
        
        .page-header {
            background: linear-gradient(135deg, #007bff, #0056b3);
            color: white;
            padding: 20px;
            border-radius: 10px;
            margin-bottom: 30px;
        }
        
        .page-header h1 {
            margin: 0;
            font-size: 2rem;
        }
        
        .filters {
            background: white;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            margin-bottom: 20px;
        }
        
        .filter-row {
            display: flex;
            gap: 15px;
            align-items: center;
            flex-wrap: wrap;
        }
        
        .filter-group {
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .filter-group label {
            font-weight: bold;
            margin: 0;
        }
        
        .filter-group select,
        .filter-group input {
            padding: 8px 12px;
            border: 1px solid #ddd;
            border-radius: 5px;
            min-width: 150px;
        }
        
        .btn-filter {
            background: #007bff;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 5px;
            cursor: pointer;
        }
        
        .btn-filter:hover {
            background: #0056b3;
        }
        
        .table-container {
            background: white;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            overflow: hidden;
        }
        
        .table-header {
            background: linear-gradient(135deg, #007bff, #0056b3);
            color: white;
            padding: 15px 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .table-header h3 {
            margin: 0;
        }
        
        .btn-add {
            background: #28a745;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 5px;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 5px;
        }
        
        .btn-add:hover {
            background: #1e7e34;
            color: white;
            text-decoration: none;
        }
        
        .table-responsive {
            overflow-x: auto;
        }
        
        .table {
            margin: 0;
        }
        
        .table th {
            background: #f8f9fa;
            border: none;
            padding: 15px 10px;
            font-weight: bold;
            color: #495057;
        }
        
        .table td {
            padding: 15px 10px;
            border: none;
            border-bottom: 1px solid #eee;
            vertical-align: middle;
        }
        
        .table tbody tr:hover {
            background: #f8f9fa;
        }
        
        .role-badge {
            padding: 5px 10px;
            border-radius: 15px;
            font-size: 0.8rem;
            font-weight: bold;
        }
        
        .role-admin {
            background: #dc3545;
            color: white;
        }
        
        .role-user {
            background: #28a745;
            color: white;
        }
        
        .status-badge {
            padding: 5px 10px;
            border-radius: 15px;
            font-size: 0.8rem;
            font-weight: bold;
        }
        
        .status-active {
            background: #d4edda;
            color: #155724;
        }
        
        .status-inactive {
            background: #f8d7da;
            color: #721c24;
        }
        
        .action-buttons {
            display: flex;
            gap: 5px;
        }
        
        .btn-action {
            padding: 5px 10px;
            border: none;
            border-radius: 3px;
            cursor: pointer;
            font-size: 0.8rem;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 3px;
        }
        
        .btn-view {
            background: #17a2b8;
            color: white;
        }
        
        .btn-edit {
            background: #ffc107;
            color: #212529;
        }
        
        .btn-delete {
            background: #dc3545;
            color: white;
        }
        
        .btn-change-role {
            background: #6f42c1;
            color: white;
        }
        
        .no-data {
            text-align: center;
            padding: 50px;
            color: #6c757d;
        }
        
        .no-data i {
            font-size: 3rem;
            margin-bottom: 15px;
            opacity: 0.5;
        }
        
        .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: linear-gradient(135deg, #007bff, #0056b3);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            font-size: 1.2rem;
        }
    </style>
}

<div class="admin-container">
    @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
    {
        <div class="alert alert-danger">
            <strong>L·ªói:</strong> @ViewBag.ErrorMessage
        </div>
    }

    <div class="page-header">
        <h1><i class="fas fa-users me-2"></i>Qu·∫£n L√Ω Ng∆∞·ªùi D√πng</h1>
        <p>Qu·∫£n l√Ω t√†i kho·∫£n ng∆∞·ªùi d√πng v√† ph√¢n quy·ªÅn</p>
    </div>

    <!-- B·ªô l·ªçc -->
    <div class="filters">
        <form method="get" action="/Admin/Users">
            <div class="filter-row">
                <div class="filter-group">
                    <label>Vai tr√≤:</label>
                    <select name="role" id="roleFilter" onchange="this.form.submit()">
                        <option value="">T·∫•t c·∫£</option>
                        <option value="Admin">Admin</option>
                        <option value="User">User</option>
                    </select>
                </div>
                <div class="filter-group">
                    <label>T√¨m ki·∫øm:</label>
                    <input type="text" name="search" value="@ViewBag.Search" placeholder="T√™n, email, username...">
                </div>
                <div class="filter-group">
                    <button type="submit" class="btn-filter">
                        <i class="fas fa-search"></i> T√¨m ki·∫øm
                    </button>
                </div>
            </div>
        </form>
    </div>

    <!-- B·∫£ng d·ªØ li·ªáu -->
    <div class="table-container">
        <div class="table-header">
            <h3><i class="fas fa-list me-2"></i>Danh s√°ch ng∆∞·ªùi d√πng (@Model.Count())</h3>
            <a href="/Admin/CreateUser" class="btn-add">
                <i class="fas fa-plus"></i> Th√™m ng∆∞·ªùi d√πng
            </a>
        </div>
        
        <div class="table-responsive">
            @if (Model.Any())
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>Avatar</th>
                            <th>Th√¥ng tin</th>
                            <th>Email</th>
                            <th>ƒêi·ªán tho·∫°i</th>
                            <th>Vai tr√≤</th>
                            <th>Tr·∫°ng th√°i</th>
                            <th>Ng√†y t·∫°o</th>
                            <th>Thao t√°c</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model)
                        {
                            <tr>
                                <td>
                                    <div class="user-avatar">
                                        @user.FullName.Substring(0, 1).ToUpper()
                                    </div>
                                </td>
                                <td>
                                    <strong>@user.FullName</strong><br>
                                    <small class="text-muted">@user.Username</small>
                                </td>
                                <td>@user.Email</td>
                                <td>@user.PhoneNumber</td>
                                <td>
                                    @if (user.Role == "Admin")
                                    {
                                        <span class="role-badge role-admin">üëë Admin</span>
                                    }
                                    else
                                    {
                                        <span class="role-badge role-user">üë§ User</span>
                                    }
                                </td>
                                <td>
                                    @if (user.IsActive)
                                    {
                                        <span class="status-badge status-active">‚úÖ Ho·∫°t ƒë·ªông</span>
                                    }
                                    else
                                    {
                                        <span class="status-badge status-inactive">‚ùå Kh√¥ng ho·∫°t ƒë·ªông</span>
                                    }
                                </td>
                                <td>@user.CreatedAt.ToString("dd/MM/yyyy")</td>
                                <td>
                                    <div class="action-buttons">
                                        <a href="/Admin/UserDetail/@user.Id" class="btn-action btn-view" title="Xem chi ti·∫øt">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a href="/Admin/EditUser/@user.Id" class="btn-action btn-edit" title="Ch·ªânh s·ª≠a">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        @if (user.Role != "Admin")
                                        {
                                            <button onclick="changeRole(@user.Id, 'Admin')" class="btn-action btn-change-role" title="C·∫•p quy·ªÅn Admin">
                                                <i class="fas fa-user-shield"></i>
                                            </button>
                                        }
                                        else
                                        {
                                            <button onclick="changeRole(@user.Id, 'User')" class="btn-action btn-change-role" title="H·∫° quy·ªÅn User">
                                                <i class="fas fa-user"></i>
                                            </button>
                                        }
                                        @if (user.Role != "Admin")
                                        {
                                            <button onclick="deleteUser(@user.Id)" class="btn-action btn-delete" title="X√≥a">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <div class="no-data">
                    <i class="fas fa-users"></i>
                    <h4>Kh√¥ng c√≥ d·ªØ li·ªáu</h4>
                    <p>Ch∆∞a c√≥ ng∆∞·ªùi d√πng n√†o trong h·ªá th·ªëng.</p>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Set selected value for filters
        document.addEventListener('DOMContentLoaded', function() {
            const roleFilter = document.getElementById('roleFilter');
            if (roleFilter) {
                roleFilter.value = '@ViewBag.Role';
            }
        });

        function changeRole(userId, newRole) {
            const roleText = newRole === 'Admin' ? 'c·∫•p quy·ªÅn Admin' : 'h·∫° quy·ªÅn User';
            if (confirm(`B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ${roleText} cho ng∆∞·ªùi d√πng n√†y?`)) {
                fetch('/Admin/ChangeUserRole', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: `userId=${userId}&newRole=${newRole}`
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('C·∫≠p nh·∫≠t vai tr√≤ th√†nh c√¥ng!');
                        location.reload();
                    } else {
                        alert('C√≥ l·ªói x·∫£y ra: ' + data.message);
                    }
                })
                .catch(error => {
                    alert('C√≥ l·ªói x·∫£y ra khi c·∫≠p nh·∫≠t vai tr√≤');
                });
            }
        }

        function deleteUser(userId) {
            if (confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a ng∆∞·ªùi d√πng n√†y? H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c.')) {
                fetch('/Admin/DeleteUser', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: `id=${userId}`
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('X√≥a ng∆∞·ªùi d√πng th√†nh c√¥ng!');
                        location.reload();
                    } else {
                        alert('C√≥ l·ªói x·∫£y ra: ' + data.message);
                    }
                })
                .catch(error => {
                    alert('C√≥ l·ªói x·∫£y ra khi x√≥a ng∆∞·ªùi d√πng');
                });
            }
        }
    </script>
} 